* {
  margin: 0;
  padding: 0;
}

// Setting variables to certain colors or widths
$color-primary: #f9ed69; //yellow color
$color-secondary: #f08a5d;
$color-tertiary: #b83b5e;
$color-text-dark: #333;
$color-text-light: #eee;
$width-button: 150px;

// Mixins provide reusable code
@mixin clearfix {
  &::after {
    content:"";
     clear:both;
    display:table;
  }
}
// mixin with parameters
@mixin style-link-text($color) {
  text-decoration: none;
  text-transform: uppercase;
  color: $color;
}

// You can also create functions!

@function divide($a, $b) {
  @return $a/ $b;
}

 nav {
  margin: divide(60, 2) * 1px; // 30px
  background-color: $color-primary;
  
//   How to use a mixin
  @include clearfix;
 }



.navigation {
  list-style: none;
  float: left;
  
  li {
    display: inline-block;
    margin-left: 30px;
    
    &:first-child {
    margin: 0;
     }
    
    a:link {
      @include style-link-text($color-text-dark);
    }
  }
}

.button {
  float: right;
}

// Extends to stay DRY use when elements are definitely related
%btn-placeholder {
  padding: 10px;
  display: inline-block;
  text-align: center;
  border-radius: 100px;
  width: $width-button;
  @include style-link-text($color-text-light);
}

.btn-main {
  &:link {
    //   using extends
    @extend %btn-placeholder;
    background-color: $color-secondary;
  }
  &:hover {
    //   built in scss darken function
    background-color: darken($color-secondary, 15%);
  }
}

.btn-hot {
  &:link {
    @extend %btn-placeholder;
    background-color: $color-tertiary;
  }
  &:hover {
    background-color: lighten($color-tertiary, 10%);
  }
}

