/* Psuedo Classes are special state of a selector. */
.btn {
    &:link,
    &:visited {
        text-transform: uppercase;
        /* gets rid of underline */
        text-decoration: none;
        /* 1 entry is all 4 sides, 2 entries 1st is top/bot and 2nd is left/right */
        padding: 1.5rem 4rem;
        /* was originally inline but you want to account for the padding (box model). */
        /* Still treated as text so text-align center on parent div affects it. */
        display: inline-block;
        border-radius: 10rem;
        /* shorthand for transitions */
        /* Transition on initial state */
        transition: all .2s;
        position: relative;
        font-size: $default-font-size;
    }

    &:hover {
        transform: translateY(-.3rem);
        /* Parameters: X direction, Y direction, Blur, Color*/
        box-shadow: 0 1rem 2rem rgba($color-black,.2);

            /* When we hover button effect the after pseudo element */
        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }

    &:active {
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }
    }

    /* treated as a child of the btn */
    /* places this behind the btn with relative and absolute relationship */
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }

    &-animated {
        /* animation name, duration, timing function, delay */
        animation: moveInBottom .5s ease-out .75s; 
        /* automatically applies 0% before the animation starts. */
        animation-fill-mode: backwards;
    }
}

.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        transform: translateY(0);
    }
}